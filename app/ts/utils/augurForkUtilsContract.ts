/*
// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.26;

interface IMarket {
    function isForkingMarket() external view returns (bool) ;
}

interface IReportingParticipant {
    function fork() external;
    function redeem(address sebdTo) external returns (bool);
}

interface IDisputeCrowdsourcer {
    function getMarket() external view returns (IMarket);
    function balanceOf(address owner) external view returns (uint256);
}

contract AuditForkUtilities {
    struct StakeData {
        IMarket market;
        IDisputeCrowdsourcer bond;
        uint256 amount;
    }

    function exists(address _address) internal view returns (bool) {
        uint256 size;
        assembly { size := extcodesize(_address) }
        return size > 0;
    }

    function getAvailableDisputesFromForkedMarkets(address _disputeCrowdsourcerFactory, address _account, uint256 _offset, uint256 _num) external view returns (StakeData[] memory _data, bool _done) {
        _data = new StakeData[](_num);
        for (uint256 _i = 0; _i < _num; _i++) {
            address _disputeBondAddress = addressFrom(_disputeCrowdsourcerFactory, _offset +_i + 1);
            if (!exists(_disputeBondAddress)) {
                return (_data, true);
            }
            IDisputeCrowdsourcer _bond = IDisputeCrowdsourcer(_disputeBondAddress);
            IMarket _market = _bond.getMarket();
            if (_market == IMarket(address(0x0)) || !_market.isForkingMarket()) {
               continue;
            }
            _data[_i].bond = _bond;
            _data[_i].market = _market;
            _data[_i].amount = _bond.balanceOf(_account);
        }
    }

    function forkAndRedeemReportingParticipants(IReportingParticipant[] memory _reportingParticipants) public returns (bool) {
        for (uint256 i = 0; i < _reportingParticipants.length; i++) {
            _reportingParticipants[i].fork();
            _reportingParticipants[i].redeem(msg.sender);
        }
        return true;
    }

    function addressFrom(address _origin, uint _nonce) public pure returns (address) {
        if(_nonce == 0x00)       return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xd6), bytes1(0x94), _origin, bytes1(0x80)))))));
        if(_nonce <= 0x7f)       return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xd6), bytes1(0x94), _origin, bytes1(uint8(_nonce))))))));
        if(_nonce <= 0xff)       return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xd7), bytes1(0x94), _origin, bytes1(0x81), uint8(_nonce)))))));
        if(_nonce <= 0xffff)     return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xd8), bytes1(0x94), _origin, bytes1(0x82), uint16(_nonce)))))));
        if(_nonce <= 0xffffff)   return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xd9), bytes1(0x94), _origin, bytes1(0x83), uint24(_nonce)))))));
        if(_nonce <= 0xffffffff) return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xda), bytes1(0x94), _origin, bytes1(0x84), uint32(_nonce)))))));
		return address(uint160(uint256((keccak256(abi.encodePacked(bytes1(0xdb), bytes1(0x94), _origin, bytes1(0x85), uint40(_nonce))))))); // more than 2^40 nonces not realistic
    }
}

*/
export const AUGUR_FORK_UTILS_BYTECODE = '0x6080604052348015600e575f80fd5b506112558061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633be4af0e14610043578063fbf551ad14610074578063ff82c64d146100a4575b5f80fd5b61005d6004803603810190610058919061082c565b6100d4565b60405161006b929190610a1c565b60405180910390f35b61008e60048036038101906100899190610a4a565b6103f5565b60405161009b9190610a97565b60405180910390f35b6100be60048036038101906100b99190610c3b565b610604565b6040516100cb9190610c82565b60405180910390f35b60605f8267ffffffffffffffff8111156100f1576100f0610ac4565b5b60405190808252806020026020018201604052801561012a57816020015b610117610744565b81526020019060019003908161010f5790505b5091505f5b838110156103ea575f610159886001848961014a9190610cc8565b6101549190610cc8565b6103f5565b905061016481610733565b610176578360019350935050506103ec565b5f8190505f8173ffffffffffffffffffffffffffffffffffffffff1663f1be16796040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e89190610d36565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061028e57508073ffffffffffffffffffffffffffffffffffffffff1663d372fbcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610268573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028c9190610d8b565b155b1561029b575050506103dd565b818685815181106102af576102ae610db6565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508086858151811061030157610300610db6565b5b60200260200101515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b81526004016103779190610a97565b602060405180830381865afa158015610392573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b69190610df7565b8685815181106103c9576103c8610db6565b5b602002602001015160400181815250505050505b808060010191505061012f565b505b94509492505050565b5f80820361043f5760d660f81b609460f81b84608060f81b6040516020016104209493929190610eb2565b604051602081830303815290604052805190602001205f1c90506105fe565b607f82116104885760d660f81b609460f81b848460f81b6040516020016104699493929190610eb2565b604051602081830303815290604052805190602001205f1c90506105fe565b60ff82116104d45760d760f81b609460f81b84608160f81b856040516020016104b5959493929190610f3f565b604051602081830303815290604052805190602001205f1c90506105fe565b61ffff82116105215760d860f81b609460f81b84608260f81b85604051602001610502959493929190610fde565b604051602081830303815290604052805190602001205f1c90506105fe565b62ffffff821161056f5760d960f81b609460f81b84608360f81b8560405160200161055095949392919061107e565b604051602081830303815290604052805190602001205f1c90506105fe565b63ffffffff82116105be5760da60f81b609460f81b84608460f81b8560405160200161059f95949392919061111f565b604051602081830303815290604052805190602001205f1c90506105fe565b60db60f81b609460f81b84608560f81b856040516020016105e39594939291906111c1565b604051602081830303815290604052805190602001205f1c90505b92915050565b5f805f90505b82518110156107295782818151811061062657610625610db6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634591c0606040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610672575f80fd5b505af1158015610684573d5f803e3d5ffd5b5050505082818151811061069b5761069a610db6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166395a2251f336040518263ffffffff1660e01b81526004016106db9190610a97565b6020604051808303815f875af11580156106f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071b9190610d8b565b50808060010191505061060a565b5060019050919050565b5f80823b90505f8111915050919050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107c88261079f565b9050919050565b6107d8816107be565b81146107e2575f80fd5b50565b5f813590506107f3816107cf565b92915050565b5f819050919050565b61080b816107f9565b8114610815575f80fd5b50565b5f8135905061082681610802565b92915050565b5f805f806080858703121561084457610843610797565b5b5f610851878288016107e5565b9450506020610862878288016107e5565b935050604061087387828801610818565b925050606061088487828801610818565b91505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b5f6108dc6108d76108d28461079f565b6108b9565b61079f565b9050919050565b5f6108ed826108c2565b9050919050565b5f6108fe826108e3565b9050919050565b61090e816108f4565b82525050565b5f61091e826108e3565b9050919050565b61092e81610914565b82525050565b61093d816107f9565b82525050565b606082015f8201516109575f850182610905565b50602082015161096a6020850182610925565b50604082015161097d6040850182610934565b50505050565b5f61098e8383610943565b60608301905092915050565b5f602082019050919050565b5f6109b082610890565b6109ba818561089a565b93506109c5836108aa565b805f5b838110156109f55781516109dc8882610983565b97506109e78361099a565b9250506001810190506109c8565b5085935050505092915050565b5f8115159050919050565b610a1681610a02565b82525050565b5f6040820190508181035f830152610a3481856109a6565b9050610a436020830184610a0d565b9392505050565b5f8060408385031215610a6057610a5f610797565b5b5f610a6d858286016107e5565b9250506020610a7e85828601610818565b9150509250929050565b610a91816107be565b82525050565b5f602082019050610aaa5f830184610a88565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610afa82610ab4565b810181811067ffffffffffffffff82111715610b1957610b18610ac4565b5b80604052505050565b5f610b2b61078e565b9050610b378282610af1565b919050565b5f67ffffffffffffffff821115610b5657610b55610ac4565b5b602082029050602081019050919050565b5f80fd5b5f610b75826107be565b9050919050565b610b8581610b6b565b8114610b8f575f80fd5b50565b5f81359050610ba081610b7c565b92915050565b5f610bb8610bb384610b3c565b610b22565b90508083825260208201905060208402830185811115610bdb57610bda610b67565b5b835b81811015610c045780610bf08882610b92565b845260208401935050602081019050610bdd565b5050509392505050565b5f82601f830112610c2257610c21610ab0565b5b8135610c32848260208601610ba6565b91505092915050565b5f60208284031215610c5057610c4f610797565b5b5f82013567ffffffffffffffff811115610c6d57610c6c61079b565b5b610c7984828501610c0e565b91505092915050565b5f602082019050610c955f830184610a0d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cd2826107f9565b9150610cdd836107f9565b9250828201905080821115610cf557610cf4610c9b565b5b92915050565b5f610d05826107be565b9050919050565b610d1581610cfb565b8114610d1f575f80fd5b50565b5f81519050610d3081610d0c565b92915050565b5f60208284031215610d4b57610d4a610797565b5b5f610d5884828501610d22565b91505092915050565b610d6a81610a02565b8114610d74575f80fd5b50565b5f81519050610d8581610d61565b92915050565b5f60208284031215610da057610d9f610797565b5b5f610dad84828501610d77565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050610df181610802565b92915050565b5f60208284031215610e0c57610e0b610797565b5b5f610e1984828501610de3565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b5f819050919050565b610e67610e6282610e22565b610e4d565b82525050565b5f8160601b9050919050565b5f610e8382610e6d565b9050919050565b5f610e9482610e79565b9050919050565b610eac610ea7826107be565b610e8a565b82525050565b5f610ebd8287610e56565b600182019150610ecd8286610e56565b600182019150610edd8285610e9b565b601482019150610eed8284610e56565b60018201915081905095945050505050565b5f60ff82169050919050565b5f8160f81b9050919050565b5f610f2182610f0b565b9050919050565b610f39610f3482610eff565b610f17565b82525050565b5f610f4a8288610e56565b600182019150610f5a8287610e56565b600182019150610f6a8286610e9b565b601482019150610f7a8285610e56565b600182019150610f8a8284610f28565b6001820191508190509695505050505050565b5f61ffff82169050919050565b5f8160f01b9050919050565b5f610fc082610faa565b9050919050565b610fd8610fd382610f9d565b610fb6565b82525050565b5f610fe98288610e56565b600182019150610ff98287610e56565b6001820191506110098286610e9b565b6014820191506110198285610e56565b6001820191506110298284610fc7565b6002820191508190509695505050505050565b5f62ffffff82169050919050565b5f8160e81b9050919050565b5f6110608261104a565b9050919050565b6110786110738261103c565b611056565b82525050565b5f6110898288610e56565b6001820191506110998287610e56565b6001820191506110a98286610e9b565b6014820191506110b98285610e56565b6001820191506110c98284611067565b6003820191508190509695505050505050565b5f63ffffffff82169050919050565b5f8160e01b9050919050565b5f611101826110eb565b9050919050565b611119611114826110dc565b6110f7565b82525050565b5f61112a8288610e56565b60018201915061113a8287610e56565b60018201915061114a8286610e9b565b60148201915061115a8285610e56565b60018201915061116a8284611108565b6004820191508190509695505050505050565b5f64ffffffffff82169050919050565b5f8160d81b9050919050565b5f6111a38261118d565b9050919050565b6111bb6111b68261117d565b611199565b82525050565b5f6111cc8288610e56565b6001820191506111dc8287610e56565b6001820191506111ec8286610e9b565b6014820191506111fc8285610e56565b60018201915061120c82846111aa565b600582019150819050969550505050505056fea2646970667358221220cb6f89a1fd7525ccacb4c754ef00ca20eed37f8291e66b69553a6b3f30402be064736f6c634300081a0033'
